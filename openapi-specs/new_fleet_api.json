{
  "openapi": "3.0.0",
  "info": {
    "title": "Fleet API",
    "description": "Fleet APIs to manage companies, users, drones and equipment",
    "version": "0.0.1-DRAFT"
  },
  "servers": [{
    "url": "https://localhost:3000/",
    "description": "Development Server"
  }],
  "paths": {
    "/fleet/drones": {
      "$ref": "#/components/routes/drones"
    },
    "/fleet/drones/{drone_id}": {
      "$ref": "#/components/routes/drones-{drone_id}"
    },
    "/fleet/drone-providers": {
      "$ref": "#/components/routes/drone-providers"
    },
    "/fleet/drone-providers/{drone_provider_id}": {
      "$ref": "#/components/routes/drone-providers-{drone_provider_id}"
    },
    "/fleet/drone-providers/{drone_provider_id}/drone-models": {
      "$ref": "#/components/routes/drone-providers-{drone_provider_id}-drone-models"
    },
    "/fleet/drone-providers/{drone_provider_id}/drone-models/{drone_model_id}": {
      "$ref": "#/components/routes/drone-providers-{drone_provider_id}-drone-models-{drone_model_id}"
    },
    "/fleet/cameras": {
      "$ref": "#/components/routes/cameras"
    },
    "/fleet/cameras/{camera_id}": {
      "$ref": "#/components/routes/cameras-{camera_id}"
    },
    "/fleet/camera-providers": {
      "$ref": "#/components/routes/camera-providers"
    },
    "/fleet/camera-providers/{camera_provider_id}": {
      "$ref": "#/components/routes/camera-providers-{camera_provider_id}"
    },
    "/fleet/camera-providers/{camera_provider_id}/camera-models": {
      "$ref": "#/components/routes/camera-providers-{camera_provider_id}-camera-models"
    },
    "/fleet/camera-providers/{camera_provider_id}/camera-models/{camera_model_id}": {
      "$ref": "#/components/routes/camera-providers-{camera_provider_id}-camera-models-{camera_model_id}"
    },
    "/fleet/batteries": {
      "$ref": "#/components/routes/batteries"
    },
    "/fleet/batteries/{battery_id}": {
      "$ref": "#/components/routes/batteries-{battery_id}"
    },
    "/fleet/battery-providers": {
      "$ref": "#/components/routes/battery-providers"
    },
    "/fleet/battery-providers/{battery_provider_id}": {
      "$ref": "#/components/routes/battery-providers-{battery_provider_id}"
    },
    "/fleet/battery-providers/{battery_provider_id}/battery-models": {
      "$ref": "#/components/routes/battery-providers-{battery_provider_id}-battery-models"
    },
    "/fleet/battery-providers/{battery_provider_id}/battery-models/{battery_model_id}": {
      "$ref": "#/components/routes/battery-providers-{battery_provider_id}-battery-models-{battery_model_id}"
    }
  },
  "tags": [{
    "name": "Drones",
    "description": "Drone Management"
  }],
  "components": {
    "routes": {
      "drones": {
        "get": {
          "tags": [
            "Drones"
          ],
          "summary": "Get all drones",
          "description": "Get all drones belonging to the company of the user.",
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "type": "array",
                        "description": "Array of drones",
                        "items": {
                          "$ref": "#/components/schemas/drone_data"
                        },
                        "example": [{
                            "name": "DRONE-001",
                            "drone_id": "7e7ed56fed0be0f555f8374e980056cd",
                            "model": {
                              "name": "M400 UAV",
                              "model_id": "7e7ed56fed0be0f555f8374e980056cd"
                            },
                            "notes": "Purpose: Security Surveillance",
                            "acquired_on": 1554090304172,
                            "serviceable": true,
                            "shared": false
                          },
                          {
                            "name": "DRONE-002",
                            "drone_id": "7e7ed56fed0be0f555f8374e980056cd",
                            "model": {
                              "name": "M408 UAV",
                              "model_id": "7e7ed56fed0be0f555f8374e980056cd"
                            },
                            "notes": "Purpose: Plantation",
                            "acquired_on": 1554090304172,
                            "serviceable": true,
                            "shared": false
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Drones"
          ],
          "summary": "Create new drone",
          "description": "Create a new drone belonging to the company of the user.",
          "requestBody": {
            "description": " **Required values:** `name`, `model_id`<br><br> **Optional values:** `notes`, `acquired_on`, `serviceable`, `shared` ",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drone"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "drones-{drone_id}": {
        "get": {
          "tags": [
            "Drones"
          ],
          "summary": "Get a drone",
          "description": "Get a specific drone belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/drone_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Drones"
          ],
          "summary": "Update a drone",
          "description": "Update a specific drone belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/drone_id"
          }],
          "requestBody": {
            "description": " **Optional values:** `name`, `model_id`, `notes`, `acquired_on`, `serviceable`, `shared` ",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drone"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Drones"
          ],
          "summary": "Delete a drone",
          "description": "Delete a specific drone belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/drone_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "drone-providers": {
        "get": {
          "tags": [
            "Drones"
          ],
          "summary": "Get all drone providers",
          "description": "Get all drones providers belonging to the company of the user.",
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "type": "array",
                        "description": "Array of drone providers",
                        "items": {
                          "$ref": "#/components/schemas/drone_provider_data"
                        },
                        "example": [{
                            "name": "Garuda Robotics Pte. Ltd.",
                            "drone_provider_id": "0c5c21b6a42fadb018a5d1863c34b35d",
                            "brand": "Garuda",
                            "country": "Singapore"
                          },
                          {
                            "name": "Rugada Robotics Pte. Ltd.",
                            "drone_provider_id": "0c5c21b6a42fadb018a5d1863c34b35d",
                            "brand": "Rugada",
                            "country": "Malaysia"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Drones"
          ],
          "summary": "Create new drone provider",
          "description": "Create a new drone provider belonging to the company of the user.",
          "requestBody": {
            "description": " **Required values:** `name`, `brand`, `country` ",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drone_provider"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "drone-providers-{drone_provider_id}": {
        "get": {
          "tags": [
            "Drones"
          ],
          "summary": "Get a drone provider",
          "description": "Get a specific drone provider belonging the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/drone_provider_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Drones"
          ],
          "summary": "Update a drone provider",
          "description": "Update a specific drone provider belonging the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/drone_provider_id"
          }],
          "requestBody": {
            "description": " **Optional values:** `name`, `brand`, `country` ",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drone_provider"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Drones"
          ],
          "summary": "Delete a drone provider",
          "description": "Delete a specific drone provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/drone_provider_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "drone-providers-{drone_provider_id}-drone-models": {
        "get": {
          "tags": [
            "Drones"
          ],
          "summary": "Get all drone models",
          "description": "Get all drones models of a specific drone provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/drone_provider_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "type": "array",
                        "description": "Array of drone models",
                        "items": {
                          "$ref": "#/components/schemas/drone_model_data"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Drones"
          ],
          "summary": "Create new drone model",
          "description": "Create a new drone model for a specific provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/drone_provider_id"
          }],
          "requestBody": {
            "description": " **Required values:** `name`, `provider_id`, `category`, `weight`, `properties`<br><br> **Optional values:** `compatibility` ",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drone_model"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_model_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "drone-providers-{drone_provider_id}-drone-models-{drone_model_id}": {
        "patch": {
          "tags": [
            "Drones"
          ],
          "summary": "Update a drone model",
          "description": "Update a specific drone model of a specific drone provider belonging to the company of the user.",
          "parameters": [{
              "$ref": "#/components/parameters/drone_provider_id"
            },
            {
              "$ref": "#/components/parameters/drone_model_id"
            }
          ],
          "requestBody": {
            "description": " **Optional values:** `name`, `provider_id`, `category`, `weight`, `properties`, `compatibility` ",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drone_model"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_model_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Drones"
          ],
          "summary": "Delete a drone model",
          "description": "Delete a specific drone model of a specific drone provider belonging to the company of the user.",
          "parameters": [{
              "$ref": "#/components/parameters/drone_provider_id"
            },
            {
              "$ref": "#/components/parameters/drone_model_id"
            }
          ],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/drone_model_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "cameras": {
        "get": {
          "tags": [
            "Camera"
          ],
          "summary": "Get all cameras",
          "description": "Get all cameras belonging to the company of the user",
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "type": "array",
                        "description": "Array of cameras",
                        "items": {
                          "$ref": "#/components/schemas/camera_data"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Camera"
          ],
          "summary": "Create new camera",
          "description": "Create a new camera belonging to the company of the user",
          "requestBody": {
            "description": " **Required values:** `name`, `model_id`<br><br> **Optional values:** `notes`, `acquired_on`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/camera"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "cameras-{camera_id}": {
        "get": {
          "tags": [
            "Camera"
          ],
          "summary": "Get a camera",
          "description": "Get a specific camera belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/camera_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Camera"
          ],
          "summary": "Update a camera",
          "description": "Update a specific camera belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/camera_id"
          }],
          "requestBody": {
            "description": " **Optional values:** `name`, `model_id`, `notes`, `acquired_on`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/camera"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Camera"
          ],
          "summary": "Delete a camera",
          "description": "Delete a specific camera belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/camera_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "camera-providers": {
        "get": {
          "tags": [
            "Camera"
          ],
          "summary": "Get all camera providers",
          "description": "Get all camera providers belonging to the company of the user.",
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "type": "array",
                        "description": "Array of camera providers",
                        "items": {
                          "$ref": "#/components/schemas/camera_provider_data"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Camera"
          ],
          "summary": "Create new camera provider",
          "description": "Create a new camera provider belonging to the company of the user.",
          "requestBody": {
            "description": "**Required values:** `name`, `brand`, `country`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/camera_provider"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "camera-providers-{camera_provider_id}": {
        "get": {
          "tags": [
            "Camera"
          ],
          "summary": "Get a camera provider",
          "description": "Get a specific camera provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/camera_provider_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Camera"
          ],
          "summary": "Update a camera provider",
          "description": "Update a specific camera provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/camera_provider_id"
          }],
          "requestBody": {
            "description": "**Optional values:** `name`, `brand`, `country`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/camera_provider"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Camera"
          ],
          "summary": "Delete a camera provider",
          "description": "Delete a specific camera provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/camera_provider_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "camera-providers-{camera_provider_id}-camera-models": {
        "get": {
          "tags": [
            "Camera"
          ],
          "summary": "Get all camera models",
          "description": "Get all camera models of a specific camera provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/camera_provider_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "successs": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "type": "array",
                        "description": "Array of camera models",
                        "items": {
                          "$ref": "#/components/schemas/camera_model_data"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Camera"
          ],
          "summary": "Create new camera model",
          "description": "Create a new camera model for a specific provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/camera_provider_id"
          }],
          "requestBody": {
            "description": "**Required values:** `name`, `provider_id`, `weight`, `type`<br><br> **Optional values:** `properties`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/camera_model"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera_model_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "camera-providers-{camera_provider_id}-camera-models-{camera_model_id}": {
        "patch": {
          "tags": [
            "Camera"
          ],
          "summary": "Update a camera model",
          "description": "Update a specific camera model of a provider belonging to the company of the user.",
          "parameters": [{
              "$ref": "#/components/parameters/camera_provider_id"
            },
            {
              "$ref": "#/components/parameters/camera_model_id"
            }
          ],
          "requestBody": {
            "description": "**Optional values:** `name`, `provider_id`, `weight`, `type`, `properties`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/camera_model"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera_model_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Camera"
          ],
          "summary": "Delete a camera model",
          "description": "Delete a specific camera model of a provider belonging to the company of the user.",
          "parameters": [{
              "$ref": "#/components/parameters/camera_provider_id"
            },
            {
              "$ref": "#/components/parameters/camera_model_id"
            }
          ],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/camera_model_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "batteries": {
        "get": {
          "tags": [
            "Battery"
          ],
          "summary": "Get all batteries",
          "description": "Get all batteries belonging to the company of the user",
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "type": "array",
                        "description": "Array of batteries",
                        "items": {
                          "$ref": "#/components/schemas/battery_data"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Battery"
          ],
          "summary": "Create new battery",
          "description": "Create a new battery belonging to the company of the user",
          "requestBody": {
            "description": " **Required values:** `name`, `model_id`<br><br> **Optional values:** `notes`, `acquired_on`, `shared`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/battery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "batteries-{battery_id}": {
        "get": {
          "tags": [
            "Battery"
          ],
          "summary": "Get a battery",
          "description": "Get a specific battery belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/battery_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Battery"
          ],
          "summary": "Update a battery",
          "description": "Update a specific battery belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/battery_id"
          }],
          "requestBody": {
            "description": " **Optional values:** `name`, `model_id`, `notes`, `acquired_on`, `shared`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/battery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Battery"
          ],
          "summary": "Delete a battery",
          "description": "Delete a specific battery belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/battery_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "battery-providers": {
        "get": {
          "tags": [
            "Battery"
          ],
          "summary": "Get all battery providers",
          "description": "Get all battery providers belonging to the company of the user.",
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "type": "array",
                        "description": "Array of battery providers",
                        "items": {
                          "$ref": "#/components/schemas/battery_provider_data"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Battery"
          ],
          "summary": "Create new battery provider",
          "description": "Create a new battery provider belonging to the company of the user.",
          "requestBody": {
            "description": "**Required values:** `name`, `brand`, `country`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/battery_provider"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "battery-providers-{battery_provider_id}": {
        "get": {
          "tags": [
            "Battery"
          ],
          "summary": "Get a battery provider",
          "description": "Get a specific battery provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/battery_provider_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Battery"
          ],
          "summary": "Update a battery provider",
          "description": "Update a specific battery provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/battery_provider_id"
          }],
          "requestBody": {
            "description": "**Optional values:** `name`, `brand`, `country`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/battery_provider"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Battery"
          ],
          "summary": "Delete a battery provider",
          "description": "Delete a specific battery provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/battery_provider_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_provider_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "battery-providers-{battery_provider_id}-battery-models": {
        "get": {
          "tags": [
            "Battery"
          ],
          "summary": "Get all battery models",
          "description": "Get all battery models of a specific battery provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/battery_provider_id"
          }],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "successs": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "type": "array",
                        "description": "Array of battery models",
                        "items": {
                          "$ref": "#/components/schemas/battery_model_data"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Battery"
          ],
          "summary": "Create new battery model",
          "description": "Create a new battery model for a specific provider belonging to the company of the user.",
          "parameters": [{
            "$ref": "#/components/parameters/battery_provider_id"
          }],
          "requestBody": {
            "description": "**Required values:** `name`, `provider_id`, `chemistry`, `series`, `parallel`, `capacity`, `weight`, `discharge_rate`<br><br> **Optional values:** `properties`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/battery_model"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_model_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "battery-providers-{battery_provider_id}-battery-models-{battery_model_id}": {
        "patch": {
          "tags": [
            "Battery"
          ],
          "summary": "Update a battery model",
          "description": "Update a specific battery model of a provider belonging to the company of the user.",
          "parameters": [{
              "$ref": "#/components/parameters/battery_provider_id"
            },
            {
              "$ref": "#/components/parameters/battery_model_id"
            }
          ],
          "requestBody": {
            "description": "**Optional values:** `name`, `provider_id`, `chemistry`, `series`, `parallel`, `capacity`, `weight`, `discharge_rate`, `properties`",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/battery_model"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_model_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Battery"
          ],
          "summary": "Delete a battery model",
          "description": "Delete a specific battery model of a provider belonging to the company of the user.",
          "parameters": [{
              "$ref": "#/components/parameters/battery_provider_id"
            },
            {
              "$ref": "#/components/parameters/battery_model_id"
            }
          ],
          "responses": {
            "200": {
              "description": "A successful request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status of the response"
                      },
                      "data": {
                        "$ref": "#/components/schemas/battery_model_data"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "drone_id": {
        "name": "drone_id",
        "in": "path",
        "required": true,
        "description": "Drone ID",
        "schema": {
          "type": "string"
        }
      },
      "drone_provider_id": {
        "name": "drone_provider_id",
        "in": "path",
        "required": true,
        "description": "Drone provider ID",
        "schema": {
          "type": "string"
        }
      },
      "drone_model_id": {
        "name": "drone_model_id",
        "in": "path",
        "required": true,
        "description": "Drone model ID",
        "schema": {
          "type": "string"
        }
      },
      "camera_id": {
        "name": "camera_id",
        "in": "path",
        "required": true,
        "description": "Camera ID",
        "schema": {
          "type": "string"
        }
      },
      "camera_provider_id": {
        "name": "camera_provider_id",
        "in": "path",
        "required": true,
        "description": "Camera provider ID",
        "schema": {
          "type": "string"
        }
      },
      "camera_model_id": {
        "name": "camera_model_id",
        "in": "path",
        "required": true,
        "description": "Camera model ID",
        "schema": {
          "type": "string"
        }
      },
      "battery_id": {
        "name": "battery_id",
        "in": "path",
        "required": true,
        "description": "Battery ID",
        "schema": {
          "type": "string"
        }
      },
      "battery_provider_id": {
        "name": "battery_provider_id",
        "in": "path",
        "required": true,
        "description": "Battery provider ID",
        "schema": {
          "type": "string"
        }
      },
      "battery_model_id": {
        "name": "battery_model_id",
        "in": "path",
        "required": true,
        "description": "Battery model ID",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "drone": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "DRONE-001"
          },
          "model_id": {
            "type": "string",
            "example": "7e7ed56fed0be0f555f8374e980056cd",
            "description": "Drone model ID"
          },
          "notes": {
            "type": "string",
            "example": "Primary purpose of drone: surveillance"
          },
          "acquired_on": {
            "type": "number",
            "example": 1554090304172,
            "description": "Date time acquired in milliseconds"
          },
          "serviceable": {
            "type": "boolean",
            "example": true
          },
          "shared": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "drone_data": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "DRONE-001"
          },
          "drone_id": {
            "type": "string",
            "example": "7e7ed56fed0be0f555f8374e980056cd"
          },
          "model": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "model_id": {
                "type": "string"
              }
            },
            "example": {
              "name": "M400 UAV",
              "model_id": "7e7ed56fed0be0f555f8374e980056cd"
            }
          },
          "notes": {
            "type": "string",
            "example": "Primary purpose of drone: surveillance"
          },
          "acquired_on": {
            "type": "number",
            "example": 1554090304172,
            "description": "Date time acquired in milliseconds"
          },
          "serviceable": {
            "type": "boolean",
            "example": true
          },
          "shared": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "drone_provider": {
        "type": "object",
        "required": [
          "name",
          "brand"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Garuda Robotics Pte. Ltd."
          },
          "brand": {
            "type": "string",
            "example": "Garuda"
          },
          "country": {
            "type": "string",
            "example": "Singapore"
          }
        }
      },
      "drone_provider_data": {
        "type": "object",
        "required": [
          "name",
          "brand"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Garuda Robotics Pte. Ltd."
          },
          "drone_provider_id": {
            "type": "string",
            "example": "0c5c21b6a42fadb018a5d1863c34b35d"
          },
          "brand": {
            "type": "string",
            "example": "Garuda"
          },
          "country": {
            "type": "string",
            "example": "Singapore"
          }
        }
      },
      "drone_model": {
        "type": "object",
        "required": [
          "name",
          "category",
          "weight",
          "properties"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "M06A"
          },
          "provider_id": {
            "type": "string",
            "example": "0c5c21b6a42fadb018a5d1863c37bb31",
            "description": "A valid drone provider ID"
          },
          "category": {
            "type": "string",
            "example": "Hexacopter"
          },
          "compatibility": {
            "type": "object",
            "properties": {
              "batteries": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "0c5c21b6a42fadb018a5d1863c37bb31",
                  "0c5c21b6a42fadb018a5d1863c36abd6",
                  "0c5c21b6a42fadb018a5d1863c36c446",
                  "0c5c21b6a42fadb018a5d1863c373f80",
                  "0c5c21b6a42fadb018a5d1863c37565e"
                ]
              },
              "cameras": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "0c5c21b6a42fadb018a5d1863c35fea4",
                  "0c5c21b6a42fadb018a5d1863c360865"
                ]
              }
            }
          },
          "weight": {
            "type": "number",
            "example": 2.6
          },
          "properties": {
            "type": "object",
            "required": [
              "dimensions",
              "max_flight_time",
              "rc_frequency"
            ],
            "properties": {
              "dimensions": {
                "type": "object",
                "required": [
                  "width",
                  "length",
                  "height"
                ],
                "properties": {
                  "width": {
                    "type": "string",
                    "example": "1.30"
                  },
                  "length": {
                    "type": "string",
                    "example": "1.30"
                  },
                  "height": {
                    "type": "string",
                    "example": "0.30"
                  }
                }
              },
              "max_flight_time": {
                "type": "string",
                "example": "1.7 hours"
              },
              "rc_frequency": {
                "type": "string",
                "example": "2.400 - 2.483GHz"
              }
            }
          }
        }
      },
      "drone_model_data": {
        "type": "object",
        "required": [
          "name",
          "category",
          "weight",
          "properties"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "M06A"
          },
          "model_id": {
            "type": "string",
            "example": "0c5c21b6a42fadb018a5d1863c37bb31"
          },
          "provider": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              }
            },
            "example": {
              "name": "Garuda Robotics",
              "provider_id": "0c5c21b6a42fadb018a5d1863c37bb31"
            }
          },
          "category": {
            "type": "string",
            "example": "Hexacopter"
          },
          "compatibility": {
            "type": "object",
            "properties": {
              "batteries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "battery_model_name": {
                      "type": "string"
                    },
                    "battery_id": {
                      "type": "string"
                    }
                  }
                }
              },
              "cameras": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "camera_model_name": {
                      "type": "string"
                    },
                    "camera_id": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "example": {
              "batteries": [{
                "name": "BATT-001",
                "battery_model_name": "Multistar 6S 6600",
                "battery_id": "0c5c21b6a42fadb018a5d1863c37bb31"
              }],
              "cameras": [{
                "name": "CAM-001",
                "camera_model_name": "Git2",
                "camera_id": "0c5c21b6a42fadb018a5d1863c37bb31"
              }]
            }
          },
          "weight": {
            "type": "number",
            "example": 2.6,
            "description": "Weight of drone in kg"
          },
          "properties": {
            "type": "object",
            "properties": {
              "dimensions": {
                "type": "object",
                "properties": {
                  "width": {
                    "type": "string",
                    "example": "1.30"
                  },
                  "length": {
                    "type": "string",
                    "example": "1.30"
                  },
                  "height": {
                    "type": "string",
                    "example": "0.30"
                  }
                }
              },
              "max_flight_time": {
                "type": "string",
                "example": "1.7 hours"
              },
              "rc_frequency": {
                "type": "string",
                "example": "2.400 - 2.483GHz"
              }
            }
          }
        }
      },
      "camera": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "CAM-001"
          },
          "model_id": {
            "type": "string",
            "example": "7e7ed56fed0be0f555f8374e980056cd",
            "description": "Camera model ID"
          },
          "notes": {
            "type": "string",
            "example": "Camera is to be used for surveillance purposes."
          },
          "acquired_on": {
            "type": "number",
            "example": 1554090304172,
            "description": "Date-time in milliseconds of acquired date."
          }
        }
      },
      "camera_data": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "CAM-001"
          },
          "camera_id": {
            "type": "string",
            "example": "7e7ed56fed0be0f555f8374e980056cd"
          },
          "model": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "model_id": {
                "type": "string"
              }
            },
            "example": {
              "name": "Git2",
              "model_id": "7e7ed56fed0be0f555f8374e980056cd"
            }
          },
          "notes": {
            "type": "string",
            "example": "Camera is to be used for surveillance purposes."
          },
          "acquired_on": {
            "type": "number",
            "example": 1554090304172,
            "description": "Date-time in milliseconds of acquired date."
          }
        }
      },
      "camera_provider": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "GoPro, Inc."
          },
          "brand": {
            "type": "string",
            "example": "GoPro"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "camera_provider_data": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "GoPro, Inc."
          },
          "provider_id": {
            "type": "string",
            "example": "7e7ed56fed0be0f555f8374e980056cd"
          },
          "brand": {
            "type": "string",
            "example": "GoPro"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "camera_model": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Git2"
          },
          "provider_id": {
            "type": "string",
            "example": "16093c440370bb24ee65a12b6c00ff0a",
            "description": "A valid camera provider ID"
          },
          "weight": {
            "type": "number",
            "example": 0.064,
            "description": "Weight of camera in kg"
          },
          "type": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "RGB",
              "NDIV"
            ]
          },
          "properties": {
            "type": "object",
            "properties": {
              "sensor_size": {
                "type": "string",
                "example": ""
              },
              "image_modes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "16MP(4608*3456)",
                  "12MP (4032*3024)",
                  "8MP (3264*2448)",
                  "5MP (2592*1944)",
                  "3MP (2048*1536)"
                ]
              },
              "video_modes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "2160P HD video: 2880 x 2160; 24fps",
                  "1440P HD video: 2560 x 1440; 30fps",
                  "1440P 4:3 HD video: 1920 x 1440; 30fps",
                  "1296P HD video: 2304 x 1296; 30fps",
                  "1080P HD video: 1920 x 1080; 60fps",
                  "1080P 4:3 HD video: 1440 x 1080; 60fps",
                  "1080P HD video: 1920 x 1080; 30fps",
                  "720P HD video: 1280 x 720; 120fps",
                  "720P HD video: 1280 x 720; 60fps",
                  "720P HD video: 1280 x 720; 30fps",
                  "WVGA video: 848 x 480; 30fps",
                  "VGA: 648 x 480; 240fps"
                ]
              },
              "maximum_clip_length": {
                "type": "string",
                "example": ""
              },
              "image_file_formats": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "video_file_formats": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "H.264",
                  "mp4"
                ]
              },
              "lens_focal_length": {
                "type": "string"
              },
              "lens_focal_length_35mm_equiv": {
                "type": "string"
              },
              "optical_zoom": {
                "type": "string"
              },
              "digital_zoom": {
                "type": "string"
              },
              "aperture": {
                "type": "string"
              },
              "image_stabilization": {
                "type": "string"
              },
              "auto_focus": {
                "type": "string"
              },
              "manual_focus": {
                "type": "boolean"
              },
              "af_modes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "af_lock": {
                "type": "boolean"
              },
              "af_assist_lamp": {
                "type": "boolean"
              },
              "focus_distance": {
                "type": "string"
              },
              "metering": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "max_iso": {
                "type": "string"
              },
              "shutter_speed": {
                "type": "string",
                "example": "60 - 1/30 sec"
              },
              "modes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "white_balance": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "continuous_shooting": {
                "type": "string"
              },
              "connectivity": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "Mini USB",
                  "Micro HDMI"
                ]
              },
              "storage": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "MicroSD"
                ]
              },
              "power": {
                "type": "string",
                "example": "950mAh Lithium-Ion rechargeable battery"
              },
              "dimensions": {
                "type": "object",
                "required": [
                  "length",
                  "width",
                  "height"
                ],
                "properties": {
                  "length": {
                    "type": "string",
                    "example": "0.059"
                  },
                  "width": {
                    "type": "string",
                    "example": "0.030"
                  },
                  "height": {
                    "type": "string",
                    "example": "0.041"
                  }
                }
              }
            }
          }
        }
      },
      "camera_model_data": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Git2"
          },
          "model_id": {
            "type": "string",
            "example": "16093c440370bb24ee65a12b6c00ff0a"
          },
          "provider": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              }
            },
            "example": {
              "name": "GoPro Inc.",
              "provider_id": "16093c440370bb24ee65a12b6c00ff0a"
            }
          },
          "weight": {
            "type": "number",
            "example": 0.064,
            "description": "Weight of camera in kg"
          },
          "type": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "RGB",
              "NDIV"
            ]
          },
          "properties": {
            "type": "object",
            "properties": {
              "sensor_size": {
                "type": "string",
                "example": ""
              },
              "image_modes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "16MP(4608*3456)",
                  "12MP (4032*3024)",
                  "8MP (3264*2448)",
                  "5MP (2592*1944)",
                  "3MP (2048*1536)"
                ]
              },
              "video_modes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "2160P HD video: 2880 x 2160; 24fps",
                  "1440P HD video: 2560 x 1440; 30fps",
                  "1440P 4:3 HD video: 1920 x 1440; 30fps",
                  "1296P HD video: 2304 x 1296; 30fps",
                  "1080P HD video: 1920 x 1080; 60fps",
                  "1080P 4:3 HD video: 1440 x 1080; 60fps",
                  "1080P HD video: 1920 x 1080; 30fps",
                  "720P HD video: 1280 x 720; 120fps",
                  "720P HD video: 1280 x 720; 60fps",
                  "720P HD video: 1280 x 720; 30fps",
                  "WVGA video: 848 x 480; 30fps",
                  "VGA: 648 x 480; 240fps"
                ]
              },
              "maximum_clip_length": {
                "type": "string",
                "example": ""
              },
              "image_file_formats": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "video_file_formats": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "H.264",
                  "mp4"
                ]
              },
              "lens_focal_length": {
                "type": "string"
              },
              "lens_focal_length_35mm_equiv": {
                "type": "string"
              },
              "optical_zoom": {
                "type": "string"
              },
              "digital_zoom": {
                "type": "string"
              },
              "aperture": {
                "type": "string"
              },
              "image_stabilization": {
                "type": "string"
              },
              "auto_focus": {
                "type": "string"
              },
              "manual_focus": {
                "type": "boolean"
              },
              "af_modes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "af_lock": {
                "type": "boolean"
              },
              "af_assist_lamp": {
                "type": "boolean"
              },
              "focus_distance": {
                "type": "string"
              },
              "metering": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "max_iso": {
                "type": "string"
              },
              "shutter_speed": {
                "type": "string",
                "example": "60 - 1/30 sec"
              },
              "modes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "white_balance": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "continuous_shooting": {
                "type": "string"
              },
              "connectivity": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "Mini USB",
                  "Micro HDMI"
                ]
              },
              "storage": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "MicroSD"
                ]
              },
              "power": {
                "type": "string",
                "example": "950mAh Lithium-Ion rechargeable battery"
              },
              "dimensions": {
                "type": "object",
                "required": [
                  "length",
                  "width",
                  "height"
                ],
                "properties": {
                  "length": {
                    "type": "string",
                    "example": "0.059"
                  },
                  "width": {
                    "type": "string",
                    "example": "0.030"
                  },
                  "height": {
                    "type": "string",
                    "example": "0.041"
                  }
                }
              }
            }
          }
        }
      },
      "battery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "BATT-001"
          },
          "model_id": {
            "type": "string",
            "example": "7e7ed56fed0be0f555f8374e980056cd",
            "description": "Battery model ID"
          },
          "notes": {
            "type": "string",
            "example": "This battery is meant for small drones only."
          },
          "shared": {
            "type": "boolean",
            "example": false
          },
          "acquired_on": {
            "type": "number",
            "example": 1554090304172
          }
        }
      },
      "battery_data": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "BATT-001"
          },
          "model": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "model_id": {
                "type": "string"
              }
            },
            "example": {
              "name": "Multistar 6S 6600",
              "model_id": "7e7ed56fed0be0f555f8374e980056cd"
            }
          },
          "notes": {
            "type": "string",
            "example": "This battery is meant for small drones only."
          },
          "shared": {
            "type": "boolean",
            "example": false
          },
          "acquired_on": {
            "type": "number",
            "example": 1554090304172
          }
        }
      },
      "battery_provider": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Da-Jiang Innovations Science and Technology Co., Ltd"
          },
          "brand": {
            "type": "string",
            "example": "DJI"
          },
          "country": {
            "type": "string",
            "example": "China"
          }
        }
      },
      "battery_provider_data": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Da-Jiang Innovations Science and Technology Co., Ltd"
          },
          "provider_id": {
            "type": "string",
            "example": "7e7ed56fed0be0f555f8374e980056cd"
          },
          "brand": {
            "type": "string",
            "example": "DJI"
          },
          "country": {
            "type": "string",
            "example": "China"
          }
        }
      },
      "battery_model": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Multistar 6S 6600",
            "description": "Name of battery model"
          },
          "provider_id": {
            "type": "string",
            "example": "7e7ed56fed0be0f555f8374e980056cd",
            "description": "Battery provider ID"
          },
          "chemistry": {
            "type": "string",
            "example": "LiPo"
          },
          "series": {
            "type": "string",
            "example": "6"
          },
          "parallel": {
            "type": "string",
            "example": "1"
          },
          "capacity": {
            "type": "string",
            "example": "6600"
          },
          "weight": {
            "type": "number",
            "example": 0.794,
            "description": "Weight of battery in kg"
          },
          "discharge_rate": {
            "type": "string",
            "example": ""
          },
          "properties": {
            "type": "object",
            "properties": {
              "dimensions": {
                "type": "object",
                "required": [
                  "width",
                  "length",
                  "height"
                ],
                "properties": {
                  "width": {
                    "type": "string",
                    "example": "0.056"
                  },
                  "length": {
                    "type": "string",
                    "example": "0.0145"
                  },
                  "height": {
                    "type": "string",
                    "example": "0.052"
                  }
                }
              }
            }
          }
        }
      },
      "battery_model_data": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Multistar 6S 6600",
            "description": "Name of battery model"
          },
          "provider": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              }
            },
            "example": {
              "name": "Da-Jiang Innovations Science and Technology Co., Ltd",
              "provider_id": "7e7ed56fed0be0f555f8374e980056cd"
            },
            "description": "Battery provider ID"
          },
          "chemistry": {
            "type": "string",
            "example": "LiPo"
          },
          "series": {
            "type": "string",
            "example": "6"
          },
          "parallel": {
            "type": "string",
            "example": "1"
          },
          "capacity": {
            "type": "string",
            "example": "6600"
          },
          "weight": {
            "type": "number",
            "example": 0.794,
            "description": "Weight of battery in kg"
          },
          "discharge_rate": {
            "type": "string",
            "example": ""
          },
          "properties": {
            "type": "object",
            "properties": {
              "dimensions": {
                "type": "object",
                "required": [
                  "width",
                  "length",
                  "height"
                ],
                "properties": {
                  "width": {
                    "type": "string",
                    "example": "0.056"
                  },
                  "length": {
                    "type": "string",
                    "example": "0.0145"
                  },
                  "height": {
                    "type": "string",
                    "example": "0.052"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
